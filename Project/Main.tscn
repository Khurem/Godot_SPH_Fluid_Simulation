[gd_scene load_steps=11 format=2]

[ext_resource path="res://bin/main.gdns" type="Script" id=1]
[ext_resource path="res://water_preset.tres" type="Texture" id=2]

[sub_resource type="Shader" id=12]
code = "shader_type canvas_item;

uniform sampler2D color_ramp;

uniform bool blobby = false;

void fragment() {
	
	if(blobby) {
		float threshold = texture(TEXTURE, UV).b*2.0 - 1.0;
		if(threshold >= 0.0)
			COLOR = texture(color_ramp, vec2(threshold, 0));
		else
			COLOR = 0.5 * (texture(color_ramp, vec2(threshold, 0)) + texture(TEXTURE, UV));
	} else {
		COLOR = texture(TEXTURE, UV);
		COLOR.rgb = texture(color_ramp, vec2(COLOR.r, 0)).rgb;
		COLOR.a = 1.0 - step(COLOR.a, 0.5);
	}
}"

[sub_resource type="ShaderMaterial" id=13]
shader = SubResource( 12 )
shader_param/blobby = true
shader_param/color_ramp = ExtResource( 2 )

[sub_resource type="ViewportTexture" id=8]
viewport_path = NodePath("TextureRect/Viewport")

[sub_resource type="Shader" id=10]
code = "shader_type canvas_item;

uniform sampler2D color_ramp;

uniform bool blobby = false;

void fragment() {
	
	if(blobby) {
		float threshold = texture(TEXTURE, UV).r*2.0 - 1.0;
		if(threshold >= 0.0)
			COLOR = texture(color_ramp, vec2(threshold, 0));
		else
			COLOR = vec4(1.0, 0.0, 0.0, 0.0);
	} else {
		COLOR = texture(TEXTURE, UV);
		COLOR.rgb = texture(color_ramp, vec2(COLOR.r, 0)).rgb;
		COLOR.a = 1.0 - step(COLOR.a, 0.5);
	}
}"

[sub_resource type="ShaderMaterial" id=11]
resource_local_to_scene = true
shader = SubResource( 10 )
shader_param/blobby = true
shader_param/color_ramp = ExtResource( 2 )

[sub_resource type="Shader" id=5]
resource_local_to_scene = true

[sub_resource type="ShaderMaterial" id=3]
resource_local_to_scene = true
shader = SubResource( 5 )

[sub_resource type="PlaneMesh" id=4]
resource_local_to_scene = true
material = SubResource( 3 )

[node name="Main" type="Spatial"]
script = ExtResource( 1 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( -1, 0, 8.74228e-08, 0, 1, 0, -8.74228e-08, 0, -1, -0.73, 0.8, -1.3 )
current = true

[node name="TextureRect" type="TextureRect" parent="."]
material = SubResource( 13 )
use_parent_material = true
margin_right = 40.0
margin_bottom = 40.0
texture = SubResource( 8 )

[node name="Viewport" type="Viewport" parent="TextureRect"]
transparent_bg = true
render_target_update_mode = 3

[node name="Camera" type="Camera" parent="TextureRect/Viewport"]
transform = Transform( 0.00295042, 0.422608, 0.906308, 0.00632717, 0.906286, -0.422618, -0.999976, 0.00698127, 1.08076e-08, 55, -15, 35 )
v_offset = 30.0
current = true

[node name="TextureRect2" type="TextureRect" parent="."]
material = SubResource( 11 )
use_parent_material = true
margin_right = 40.0
margin_bottom = 40.0
texture = SubResource( 8 )

[node name="Viewport" type="Viewport" parent="TextureRect2"]
transparent_bg = true
render_target_update_mode = 3

[node name="Camera" type="Camera" parent="TextureRect2/Viewport"]
transform = Transform( 0.00295042, 0.422608, 0.906308, 0.00632717, 0.906286, -0.422618, -0.999976, 0.00698127, 1.08076e-08, 55, -15, 35 )
v_offset = 30.0
current = true

[node name="ViewportContainer" type="ViewportContainer" parent="."]
anchor_bottom = 1.0
margin_right = 40.0
margin_bottom = -560.0

[node name="MeshInstance" type="MeshInstance" parent="ViewportContainer"]
transform = Transform( 2, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, -0.784472, 0.892128, 0 )
mesh = SubResource( 4 )
material/0 = null
